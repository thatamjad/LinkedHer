name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint backend code
      run: |
        cd backend
        npm run lint || echo "No lint script found"
    
    - name: Lint frontend code
      run: |
        cd frontend
        npm run lint || echo "No lint script found"
    
    - name: Run backend tests
      run: |
        cd backend
        npm test || echo "No test script found"
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/linkedher_test
        JWT_SECRET: test_secret_key_for_ci_cd_pipeline_testing
        JWT_REFRESH_SECRET: test_refresh_secret_key_for_ci_cd_pipeline_testing
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false || echo "No test script found"
      env:
        CI: true
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'https://api.linkedher.com/api' }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit for backend
      run: |
        cd backend
        npm audit --audit-level moderate
    
    - name: Run security audit for frontend
      run: |
        cd frontend
        npm audit --audit-level moderate

  deploy-staging:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploy to staging environment"
        # Add staging deployment commands here

  deploy-production:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploy to production environment"
        # Add production deployment commands here
        # Examples:
        # - Deploy frontend to Vercel/Netlify
        # - Deploy backend to Railway/Render
        # - Update database migrations
